package ${package}.common.utils;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.context.MessageSource;
import org.springframework.context.NoSuchMessageException;
import org.springframework.context.i18n.LocaleContextHolder;
/**
 * ${comments}
 *
 * @author ${author}
 * @since ${version} ${date}
 */
public class MessageUtils {
    private static final Logger log = LoggerFactory.getLogger(MessageUtils.class);
    private static MessageSource messageSource;

    public MessageUtils() {
    }

    private static void init() {
        if (messageSource == null) {
            Class var0 = MessageUtils.class;
            synchronized(MessageUtils.class) {
                if (messageSource == null) {
                    messageSource = (MessageSource)SpringContextUtils.getBean("messageSource");
                }
            }
        }

    }

    public static String getMessage(int code) {
        return getMessage(code);
    }

    public static String getMessage(int code, Object... params) {
        try {
            init();
            return messageSource == null ? "" + code : messageSource.getMessage(code + "", params, RequestContextTraceUtils.getLocale());
        } catch (NoSuchMessageException var3) {
            LogUtils.error(log, "国际化消息查询失败:{}", new Object[]{var3.getMessage()});
            return "";
        }
    }

    public static String getMessage(String key) {
        init();
        return messageSource == null ? "" : messageSource.getMessage(key.startsWith("{") && key.endsWith("}") ? key.substring(1, key.lastIndexOf("}")) : key, new String[0], LocaleContextHolder.getLocale());
    }

    public static String getMessage(String key, String... params) {
        init();
        return messageSource == null ? "" : messageSource.getMessage(key.startsWith("{") && key.endsWith("}") ? key.substring(1, key.lastIndexOf("}")) : key, params, LocaleContextHolder.getLocale());
    }
}
