package ${package}.modules.${moduleName}.controller;

import com.appiron.emm.common.validator.group.AddGroup;
import com.appiron.emm.common.validator.group.DefaultGroup;
import com.appiron.emm.common.validator.group.UpdateGroup;
import ${package}.PageQuery;
import ${package}.modules.${moduleName}.entity.${className}Entity;
import ${package}.modules.${moduleName}.service.${className}Service;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import ${package}.utils.R;
import com.alibaba.fastjson.JSONObject;
import lombok.extern.slf4j.Slf4j;
import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @since ${version} ${date}
 */
@Slf4j
@Api(tags="${comments}")
@RestController
@RequestMapping("${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    @ApiOperation("通过id获取数据详情")
    @PostMapping("/getById")
    public R<List<${className}Entity>> get${className}ById(@ApiParam(value = "id",required = true)@Param("id") String id){
        log.info("参数:"+id);
        List<${className}Entity> list = ${classname}Service.getById(id);
        R r = new R();
        r.setCode(200);
        r.setMessage("获取成功");
        r.setData(list);
        return r;
    }

    @ApiOperation("获取所有数据详情")
    @PostMapping("/getAll")
    public R<${className}Entity> getAll${className}(){
        List<${className}Entity> list = ${classname}Service.getAll${className}();
        R r = new R();
        r.setCode(200);
        r.setMessage("获取成功");
        r.setData(list);
        return r;
    }

    @ApiOperation("更新")
    @PostMapping("update")
    @ApiParam
    public R update(@RequestBody @Validated({UpdateGroup.class, DefaultGroup.class}) ${className}Entity obj) {
        log.info("传入对象:"+ JSONObject.toJSONString(obj));
        R r=new R();
        r.setCode(200);
        r.setMessage("更新成功!");
        return ${classname}Service.update${className}(obj) ? r : R.error();
    }

    @ApiOperation("保存")
    @PostMapping("save")
    @ApiParam
    public R save(@RequestBody @Validated({AddGroup.class, DefaultGroup.class}) ${className}Entity obj) {
        log.info("传入对象:"+ JSONObject.toJSONString(obj));
        R r=new R();
        r.setCode(200);
        r.setMessage("保存成功!");
        return ${classname}Service.insert${className}(obj) ? r: R.error();
    }

    @ApiOperation("删除")
    @PostMapping("delete")
    @ApiParam
    public R delete(@RequestBody @Validated List<String> ids) {
        log.info("传入对象:"+ JSONObject.toJSONString(ids));
        R r=new R();
        r.setCode(200);
        if (ids.size()==0){
            r.setMessage("参数为空!");
            return r;
        }else {
            r.setMessage("删除成功!");
            return  ${classname}Service.deleteById(ids) ? r : R.error();
        }
    }

    @ApiOperation("分页")
    @PostMapping("page")
    @ApiParam
    public R page(@RequestBody PageQuery query) {
        return R.success(${classname}Service.page(query));
    }
}