package ${package}.modules.${moduleName}.controller;

import ${package}.modules.${moduleName}.dto.${className}Entity;
import ${package}.modules.${moduleName}.service.${className}Service;
import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import com.appiron.emm.common.utils.R;
import com.appiron.emm.common.validator.group.AddGroup;
import com.appiron.emm.common.validator.group.DefaultGroup;
import com.appiron.emm.common.validator.group.UpdateGroup;
import com.appiron.emm.common.utils.PageQuery;
import lombok.extern.slf4j.Slf4j;
import java.io.Serializable;
import java.util.List;

/**
 * ${comments}
 *
 * @author ${author}
 * @since ${version} ${date}
 */
@Slf4j
@Api(tags="${comments}")
@RestController
@RequestMapping("${pathName}")
public class ${className}Controller {
    @Autowired
    private ${className}Service ${classname}Service;

    @ApiOperation("通过id获取数据详情")
    @PostMapping("/getById")
    public R<List<${className}Entity>> get(@ApiParam(value = "id",required = true)@Param("id") String id){
        log.info("参数:"+id);
        return R.success(${classname}Service.getById(id));
    }

    @ApiOperation("获取所有数据详情")
    @PostMapping("/getAll")
    public R<${className}Entity> get(){
        return R.success(${classname}Service.getAll());
    }

    @ApiOperation("更新")
    @PostMapping("update")
    @ApiParam
    public R update(@RequestBody @Validated({UpdateGroup.class, DefaultGroup.class}) ${className}Entity obj) {
        log.info("参数:"+obj);
        return ${classname}Service.update(obj) ? R.success("") : R.error();
    }

    @ApiOperation("保存")
    @PostMapping("save")
    @ApiParam
    public R save(@RequestBody @Validated({AddGroup.class, DefaultGroup.class}) ${className}Entity obj) {
        log.info("参数:"+obj);
        return ${classname}Service.insert(obj) ? R.success("") : R.error();
    }

    @ApiOperation("删除")
    @PostMapping("delete")
    @ApiParam
    public R delete(@RequestBody @Validated List<String> ids) {
        log.info("参数:"+ids);
        return ${classname}Service.delete(ids) ? R.success("") : R.error();
    }

    @ApiOperation("分页")
    @PostMapping("page")
    @ApiParam
    public R page(@RequestBody PageQuery query) {
        return R.success(${classname}Service.page(query));
    }
}